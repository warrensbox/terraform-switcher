name: Run tests
permissions: {} # yamllint disable-line rule:braces

on:
  push:
    branches:
      - "*" # matches every branch that doesn't contain a '/'
      - "*/*" # matches every branch containing a single '/'
      - "**" # matches every branch
      - "!master" # excludes `master` branch

env:
  CGO_ENABLED: 0 # Build statically linked binaries

jobs:
  fmt_and_vet:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          persist-credentials: false

      - name: Install Go
        uses: actions/setup-go@44694675825211faa026b3c33043df3e48a5fa00 # v6.0.0
        with:
          go-version-file: "go.mod"
          cache: false

      - name: Check vet
        run: |
          go vet ./...

      - name: Check fmt
        run: |
          go fmt ./...
          if [[ -z "$(git status --porcelain)" ]]; then
            echo "Formatting is consistent with 'go fmt'."
          else
            echo "Run 'go fmt ./...' to automatically apply standard Go style to all packages."
            git status --porcelain
            exit 1
          fi

  integration_tests_linux:
    strategy:
      matrix:
        os: [ubuntu-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout repo
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          persist-credentials: false

      - name: Install Go
        uses: actions/setup-go@44694675825211faa026b3c33043df3e48a5fa00 # v6.0.0
        with:
          go-version-file: "go.mod"
          cache: false

      - name: Build code
        run: go build -v ./...

      - name: Running unit tests
        run: |
          go test -v ./...

      - name: Running integration tests
        run: |
          set -e
          mkdir -p build
          go build -v -o build/tfswitch
          mkdir "$(pwd)/bin/"
          find ./test-data/integration-tests/* -type d -print0 | while read -r -d $'\0' TEST_PATH; do
              if test -f "${TEST_PATH}/.tfswitch.toml"
              then
                  cp "${TEST_PATH}/.tfswitch.toml" ~/
              else
                  rm -f ~/.tfswitch.toml
              fi
              ./build/tfswitch -c "${TEST_PATH}" -b "$(pwd)/bin/terraform" || exit 1
          done

  integration_tests_windows:
    strategy:
      matrix:
        os: [windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout repo
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          persist-credentials: false

      - name: Install Go
        uses: actions/setup-go@44694675825211faa026b3c33043df3e48a5fa00 # v6.0.0
        with:
          go-version-file: "go.mod"
          cache: false

      - name: Running unit tests
        run: |
          go test -v ./...
