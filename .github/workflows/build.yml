name: Run tests

on:
  push:
    branches: 
      - '*'       # matches every branch that doesn't contain a '/'
      - '*/*'     # matches every branch containing a single '/'
      - '**'      # matches every branch
      - '!master' # excludes `master` branch

env:
  CGO_ENABLED: 0 # Build statically linked binaries

jobs:
  fmt_and_vet:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Install Go
        uses: actions/setup-go@v5
        with:
          go-version: 1.22

      - name: Check vet
        run: |
          go vet ./...

      - name: Check fmt
        run: |
          go fmt ./...
          if [[ -z "$(git status --porcelain)" ]]; then
            echo "Formatting is consistent with 'go fmt'."
          else
            echo "Run 'go fmt ./...' to automatically apply standard Go style to all packages."
            git status --porcelain
            exit 1
          fi

  integration_tests_linux:
    strategy:
      matrix:
        os: [ubuntu-latest]
        go_version: ['1.22']
    runs-on: ${{ matrix.os }}
    steps:

    - name: Checkout repo
      uses: actions/checkout@v4

    - name: Install Go
      uses: actions/setup-go@v5
      with:
        go-version: ${{ matrix.go_version }}

    - name: Build code
      run: go build -v ./...

    - name: Running unit tests
      run: |
        go test -v ./...

    - name: Running integration tests
      run: |
        set -e
        mkdir -p build
        go build -v -o build/tfswitch
        mkdir `pwd`/bin/
        find ./test-data/integration-tests/* -type d -print0 | while read -r -d $'\0' TEST_PATH; do
            if test -f "${TEST_PATH}/.tfswitch.toml"
            then
                cp "${TEST_PATH}/.tfswitch.toml" ~/
            else
                rm -f ~/.tfswitch.toml
            fi
            ./build/tfswitch -c "${TEST_PATH}" -b `pwd`/bin/terraform || exit 1
        done

  integration_tests_windows:
    strategy:
      matrix:
        os: [windows-latest]
        go_version: ['1.22']
    runs-on: ${{ matrix.os }}
    steps:

    - name: Checkout repo
      uses: actions/checkout@v4

    - name: Install Go
      uses: actions/setup-go@v5
      with:
        go-version: ${{ matrix.go_version }}

    - name: Running unit tests
      run: |
        go test -v ./...

    - name: Running intergration tests
      run: |
        whoami
        # Stop execution if any command fails
        # $ErrorActionPreference = "Stop"

        # # Create the build directory if it doesn't exist
        # mkdir -p build

        # # Build the Go project
        # go build -v -o build/tfswitch

        # # Create the bin directory in the current directory
        # mkdir -Force (Join-Path (Get-Location) "bin")

        # # Find all directories under ./test-data/integration-tests/
        # $testPaths = Get-ChildItem -Path .\test-data\integration-tests-windows\* -Directory

        # foreach ($testPath in $testPaths) {
        #     $tfswitchToml = Join-Path $testPath ".tfswitch.toml"
        #     if (Test-Path $tfswitchToml) {
        #         Copy-Item -Path $tfswitchToml -Destination $HOME
        #     } else {
        #         Remove-Item -Path (Join-Path $HOME ".tfswitch.toml") -ErrorAction Ignore
        #     }
            
        #     $tfswitchExe = Join-Path (Get-Location) "build\tfswitch"
        #     $testPathAbsolute = (Resolve-Path $testPath).Path
        #     $binPath = Join-Path (Get-Location) "bin\terraform"
            
        #     & $tfswitchExe -c $testPathAbsolute -b $binPath
        # }

