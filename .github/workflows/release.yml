name: Release (Manual Step)
permissions: {} # yamllint disable-line rule:braces

on:
  workflow_dispatch:
    inputs:
      #checkov:skip=CKV_GHA_7: This is a manual step intended for user input
      name:
        description: "Enter - major, minor, patch"
        default: "patch"

jobs:
  tfswitch-release:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Check if provided input is valid
        run: |
          echo "Semantic Version: ${GH_EVENT_INPUTS_NAME}"
          VERSION="${GH_EVENT_INPUTS_NAME}"
          if [ "$VERSION" != "major" ] && [ "$VERSION" != "minor" ] && [ "$VERSION" != "patch" ]; then
              echo "Error: Provided input string must be 'major', 'minor', or 'patch'"
              exit 1
          fi
        env:
          GH_EVENT_INPUTS_NAME: ${{ github.event.inputs.name }}

      # Checkout code from repo
      - name: Checkout repo
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          persist-credentials: false
          ref: ${{ github.head_ref }} # required for better experience using pre-releases
          fetch-depth: "0"

      # Install Go
      - name: Install Go
        uses: actions/setup-go@d35c59abb061a4a6fb18e82ac0862c26744d6ab5 # v5.5.0
        with:
          go-version-file: "go.mod"
          cache: false

      # Double check Go version
      - name: Go version
        id: Version
        run: go version

      # Download Go dependencies
      - name: Go download
        run: go mod download

      # Test to see if tfswitch works with --help
      - name: Go build
        env:
          CGO_ENABLED: 0 # Build statically linked binaries
        run: mkdir -p build && go build -v -o build/tfswitch && build/tfswitch --help
        continue-on-error: false

      - name: Create dry tag
        uses: anothrNick/github-tag-action@4ed44965e0db8dab2b466a16da04aec3cc312fd8 # 1.75.0
        id: semver-tag-dry
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          WITH_V: true
          INITIAL_VERSION: 1.0.0
          RELEASE_BRANCHES: master
          DEFAULT_BUMP: ${{ github.event.inputs.name }}
          PRERELEASE: false
          DRY_RUN: true # Only get the tag - dry
          VERBOSE: false

      # Echo version
      - name: Echo version
        run: |
          echo "${GH_STEPS_SEMVER_TAG_DRY_OUTPUTS_TAG}"
        env:
          GH_STEPS_SEMVER_TAG_DRY_OUTPUTS_TAG: ${{ steps.semver-tag-dry.outputs.tag }}

      # Push the changes to remote
      # - name: Push changes
      #   uses: ad-m/github-push-action@master
      #   with:
      #     github_token: ${{ secrets.GITHUB_TOKEN }}
      #     branch: release-${{ steps.semver-tag-dry.outputs.tag }}

      # - name: Create Pull Request
      #   id: cpr
      #   uses: peter-evans/create-pull-request@v6
      #   with:
      #     token: ${{ secrets.GITHUB_TOKEN }}
      #     branch: release-${{ steps.semver-tag-dry.outputs.tag }}
      #     title: Release ${{ steps.semver-tag-dry.outputs.tag }}
      #     labels: automerge

      # - name: Check outputs
      #   if: ${{ steps.cpr.outputs.pull-request-number }}
      #   run: |
      #     echo "Pull Request Number - ${{ steps.cpr.outputs.pull-request-number }}"
      #     echo "Pull Request URL - ${{ steps.cpr.outputs.pull-request-url }}"

      # - name: Merging release PR
      #   run: gh pr merge --merge --auto "${{ steps.cpr.outputs.pull-request-number }}"
      #   env:
      #     GH_TOKEN: "${{ secrets.GITHUB_TOKEN }}"

      # Introduce new tag (for real)
      - name: Bump version and push tag
        uses: anothrNick/github-tag-action@4ed44965e0db8dab2b466a16da04aec3cc312fd8 # 1.75.0
        id: semver-tag
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          WITH_V: true
          INITIAL_VERSION: 1.0.0
          RELEASE_BRANCHES: master
          DEFAULT_BUMP: ${{ github.event.inputs.name }}
          PRERELEASE: false
          DRY_RUN: false # Not dry
          VERBOSE: true

      # Run goreleaser to create new binaries
      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@e435ccd777264be153ace6237001ef4d979d3a7a # v6.4.0
        with:
          version: latest
          args: release --clean
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          RELEASE_VERSION: ${{ steps.semver-tag.outputs.tag }}
          PERSONAL_ACCESS_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
          NO_CREATE_CHANGELOG: false

      # Install Python
      - name: Install Python
        uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065 # v5.6.0
        with:
          python-version: 3.x

      # Install Py dependencies
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install mkdocs-material

      # Build WWW page
      - name: Build page
        run: cd www && mkdocs gh-deploy --force
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
